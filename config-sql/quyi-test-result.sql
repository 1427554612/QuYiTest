/*
 Navicat Premium Data Transfer

 Source Server         : 本地
 Source Server Type    : MySQL
 Source Server Version : 50717
 Source Host           : localhost:3306
 Source Schema         : quyi-test-result

 Target Server Type    : MySQL
 Target Server Version : 50717
 File Encoding         : 65001

 Date: 10/11/2023 14:33:39
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for test_result
-- ----------------------------
DROP TABLE IF EXISTS `test_result`;
CREATE TABLE `test_result`  (
  `result_id` char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '结果id',
  `config_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '配置名称',
  `case_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用例名称',
  `result_type` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '结果类型',
  `run_num` int(11) NULL DEFAULT NULL COMMENT '执行次数',
  `run_success_num` int(11) NULL DEFAULT NULL COMMENT '执行成功次数',
  `run_error_num` int(11) NULL DEFAULT NULL COMMENT '执行失败次数',
  `run_success_rate` double NULL DEFAULT NULL COMMENT '执行成功率',
  `last_run_result` tinyint(1) NULL DEFAULT NULL COMMENT '最后一次执行结果是否成功,0表示错误、1表示成功',
  `last_run_date` datetime(0) NULL DEFAULT NULL COMMENT '最近一次执行时间',
  `last_run_time` int(11) NULL DEFAULT NULL COMMENT '最近一次执行耗时',
  `datas` json NULL COMMENT '数据',
  `result_data` json NULL COMMENT '结果数据',
  `result_log` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '结果日志'
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of test_result
-- ----------------------------
INSERT INTO `test_result` VALUES ('1696090823151595522', 'M2预发布', 'register_user_success', 'api', 38, 12, 26, 0, 1, '2023-09-26 20:02:40', 6721, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512c86776c9763cf9145779\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695729760934_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T12:02:47.545+00:00\", \"last_name\": \"\", \"nick_name\": \"User6542998617\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 12:02:47 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb5c1f589446f7-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"6512c86776c9763cf9145779\",\"account\":\"zhangjun_1695729760934_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T12:02:47.545+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User6542998617\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  拿到真实数据为：6512c86776c9763cf9145779<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512c86776c9763cf9145779, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512c86776c9763cf9145779, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后真实的值为：zhangjun_1695729760934_1@qq.com<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695729760934_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695729760934_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result` VALUES ('1696090825663983617', 'M2预发布', 'login_user_success', 'api', 31, 31, 0, 0, 1, '2023-09-26 20:02:47', 664, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512c86776c9763cf9145779\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695729760934_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-26T12:02:48.288+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T12:02:47.545+00:00\", \"last_name\": \"\", \"nick_name\": \"User6542998617\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"ec86df9c42c945ab9221f5cb61b26962\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 12:02:48 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb5c295eae46f7-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 406</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"ec86df9c42c945ab9221f5cb61b26962\",\"user\":{\"_id\":\"6512c86776c9763cf9145779\",\"account\":\"zhangjun_1695729760934_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T12:02:47.545+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-26T12:02:48.288+00:00\",\"nick_name\":\"User6542998617\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 406</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  拿到真实数据为：ec86df9c42c945ab9221f5cb61b26962<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=ec86df9c42c945ab9221f5cb61b26962, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=ec86df9c42c945ab9221f5cb61b26962, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  用例名称：login_user_success执行结束....<br><br>');

-- ----------------------------
-- Table structure for test_result_info
-- ----------------------------
DROP TABLE IF EXISTS `test_result_info`;
CREATE TABLE `test_result_info`  (
  `result_id` char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '结果id',
  `case_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用例名称',
  `result_info_id` char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '结果详情id',
  `config_id` char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '执行配置id',
  `run_result` tinyint(1) NULL DEFAULT NULL COMMENT '是否成功,0表示错误、1表示成功',
  `run_begin_time` datetime(0) NULL DEFAULT NULL COMMENT '开始执行时间',
  `run_end_time` datetime(0) NULL DEFAULT NULL COMMENT '执行结束时间',
  `run_time` int(11) NULL DEFAULT NULL COMMENT '执行时长',
  `datas` json NULL COMMENT '数据',
  `result_data` json NULL COMMENT '结果数据',
  `result_log` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '结果日志'
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of test_result_info
-- ----------------------------
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1696090823248064514', '1693904735972724737', 0, '2023-08-28 17:22:16', '2023-08-28 17:22:18', 1871, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Mon, 28 Aug 2023 09:22:19 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=lOimOTjY82tEkZJOsOFQDaBP6FWuCap5A2AzcFytMvW01mUo2Y%2Bxjiakif8Wl88pl%2FECbohMfg2lw5kznU3EiVPnPRwMKhqCTokCK4Gzyxh1pBlEWecmPQsgYafyub5QoIeRpmaoBZvR\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fdb7d2fedb23dd4-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-28 17:22:16 849</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-28 17:22:16 849</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-28 17:22:16 849</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-28 17:22:16 849</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-28 17:22:16 849</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-28 17:22:16 849</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:22:16 849</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  get By response body：1004，except value：200 assert result isfalse<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 719</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 720</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1696090825773035522', '1693904735972724737', 1, '2023-08-28 17:22:18', '2023-08-28 17:22:19', 526, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-28T09:22:20.124+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"6a0a59ea814f46f09e6fe07b3b86ca3f\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Mon, 28 Aug 2023 09:22:20 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=u9SpTECUDou6gA519IMRqxXEgyHFP7VPUc4TsRcauSeq2xVB1%2BWWDGqGx2NC20mu8%2B6zUTS3sF8RZcjq7er0e0wHYrvk2LPQHoy8O4hiGDkE6OX%2FH%2BlB%2BVIodUTV5g2tyHqbspFBwKlh\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fdb7d3a4a1b3dd4-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-28 17:22:18 795</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 795</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 795</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 796</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 796</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 796</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:22:18 796</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"6a0a59ea814f46f09e6fe07b3b86ca3f\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-28T09:22:20.124+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  get By response body：200，except value：200 assert result istrue<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  拿到真实数据为：6a0a59ea814f46f09e6fe07b3b86ca3f<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=6a0a59ea814f46f09e6fe07b3b86ca3f)<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=6a0a59ea814f46f09e6fe07b3b86ca3f)<br><br><span style = \'color:blue\'>2023-08-28 17:22:19 321</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1696091135673380865', '1693904735972724737', 0, '2023-08-28 17:23:32', '2023-08-28 17:23:33', 485, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Mon, 28 Aug 2023 09:23:34 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=hfeEU7RJhUJOTZ9u%2BmEvhf1VvcHaRxoW75ot1CxqLTboB%2BgbtXs5MxJKVeruybmBNB2yirc1Hn3g%2FrAWVwaUgRJmd1j2XLSldrOD5%2FksFtvyLi%2FOxp6AW%2F4AsNr%2Fmy6QzDMliQTl8xuR\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fdb7f087a533dd4-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-28 17:23:32 747</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-28 17:23:32 747</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-28 17:23:32 747</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-28 17:23:32 747</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-28 17:23:32 747</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-28 17:23:32 747</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:23:32 747</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  get By response body：1004，except value：200 assert result isfalse<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 232</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1696091138072522753', '1693904735972724737', 1, '2023-08-28 17:23:33', '2023-08-28 17:23:33', 518, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-28T09:23:34.613+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"667e0466bfce439cb28b038c4bdb0213\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Mon, 28 Aug 2023 09:23:34 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Iv0kZE4IEU%2BLMK5%2BSDlM%2B2aAt2%2FE831ZlS8eS22oQtkCS%2BpE0%2BnzicWf94ACnXOnH%2Bq5RkpuDAnb7pqnLFYG4O90xam2RBYgx4yjsMTj7fbiAD6QvvoBnW8I2Rt0oZ8vpWihD0o49CqY\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fdb7f0bdfe43dd4-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-28 17:23:33 290</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 291</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 291</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 291</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 291</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 291</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 291</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"667e0466bfce439cb28b038c4bdb0213\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-28T09:23:34.613+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  get By response body：200，except value：200 assert result istrue<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  拿到真实数据为：667e0466bfce439cb28b038c4bdb0213<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=667e0466bfce439cb28b038c4bdb0213)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=667e0466bfce439cb28b038c4bdb0213)<br><br><span style = \'color:blue\'>2023-08-28 17:23:33 808</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1696430355713634306', '1693904735972724737', 0, '2023-08-29 15:51:27', '2023-08-29 15:51:29', 1873, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:51:29 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Fj0C0UkGryu9YWTKlkJzfgGTjWhW9eO8sXpqOzgQ7dJ0J9T%2FOvVF3Kj99r%2FB%2Bi7n5EZSO3ubtokSA74zFQII7o4FXP2VaYvN6sB4MjMnpojKnJK6pBMreiPNn3UR0XXwNXe0Mc4fpsHC\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe3357f28c59f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:51:27 450</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-29 15:51:27 451</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-29 15:51:27 451</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:51:27 454</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-29 15:51:27 454</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:27 455</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:27 455</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 559</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 561</span>  get By response body：1004，except value：200 assert result isfalse<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 562</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 563</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1696430358104387585', '1693904735972724737', 1, '2023-08-29 15:51:29', '2023-08-29 15:51:30', 508, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-29T07:51:29.992+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"dc08f14c74884122b081e3862805c5ec\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:51:30 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=DHvW%2FiZTnvySR9wMGIYoZwW%2BFPnrdHA7g1iwql8DDctLaGxKNFpLgJYIIwxvZjCN4HX1KGn2IrAJUbzVL5dgY1x5KOrHmg08yYZAVEkTvA5JFJyMSFW%2BqBuLNL4RJptCW0sixhXuECyz\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe3358afc999f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:51:29 653</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 654</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 654</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 654</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 654</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 654</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:29 654</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 162</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"dc08f14c74884122b081e3862805c5ec\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-29T07:51:29.992+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 163</span>  get By response body：200，except value：200 assert result istrue<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 163</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 163</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 163</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 163</span>  拿到真实数据为：dc08f14c74884122b081e3862805c5ec<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 163</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=dc08f14c74884122b081e3862805c5ec)<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 163</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=dc08f14c74884122b081e3862805c5ec)<br><br><span style = \'color:blue\'>2023-08-29 15:51:30 163</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1696430425414578177', '1693904735972724737', 0, '2023-08-29 15:51:45', '2023-08-29 15:51:46', 457, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:51:46 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=oW99riAYi0eKqyp7sP8303CWlVFvva55VfhnK1ZWKN0H4t5dQdgKBcHYa2mKpCjZd3ERKAiF%2Bz%2F%2Be6jmPHQe%2FZ4K1Lp0HkA9b2sMCgjBGvsj0%2F%2FEm41dQ96DEv7gbVj9AyOyetTTQqvO\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe335ef9a2c9f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:51:45 756</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-29 15:51:45 756</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-29 15:51:45 756</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:51:45 756</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-29 15:51:45 756</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:45 756</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:45 756</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  get By response body：1004，except value：200 assert result isfalse<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 214</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 215</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1696430428828741633', '1693904735972724737', 1, '2023-08-29 15:51:46', '2023-08-29 15:51:47', 771, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-29T07:51:46.865+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"79ca25273156430e834a40dd5011c74f\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:51:47 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=yZIaG4Jsdwk2SNZfnqy%2B1HZ0tWG%2BmUZJNNZkVBVDsdAr5dfWAaMslhERdO3VwFw4NkzP9qsP3eHXC8vQp3pzlCPWyIdNXBmGP%2FpPQg0w6ZPw7rt65wdQcY9ukLUgbi3eYcGrHyjRaeAI\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe335f47f719f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:51:46 261</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 261</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 261</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 261</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 261</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 261</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:46 261</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"79ca25273156430e834a40dd5011c74f\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-29T07:51:46.865+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  get By response body：200，except value：200 assert result istrue<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  拿到真实数据为：79ca25273156430e834a40dd5011c74f<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=79ca25273156430e834a40dd5011c74f)<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=79ca25273156430e834a40dd5011c74f)<br><br><span style = \'color:blue\'>2023-08-29 15:51:47 32</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1696430450198720514', '1693904735972724737', 0, '2023-08-29 15:51:51', '2023-08-29 15:51:52', 452, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:51:52 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=LxXXzRk6ZQzRZo%2B7kI2HcCfDPV2wmhlNgIHkzjG%2B6zMm3fYgb9CCt0TNJWyj1CaW1r0hUsQj5gMG5d2CcoPsc1l2j1%2FggazMxDUf2hVMy9zc8t0q8XlgRn5HPu5Tm%2Biwh75XvJfNYS%2Bn\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe3361489f29f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:51:51 672</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-29 15:51:51 672</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-29 15:51:51 672</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:51:51 673</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-29 15:51:51 673</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:51 673</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:51 673</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  get By response body：1004，except value：200 assert result isfalse<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 126</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 127</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 127</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 127</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1696430452497199105', '1693904735972724737', 1, '2023-08-29 15:51:52', '2023-08-29 15:51:52', 505, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-29T07:51:52.503+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"739b772d0fb1405197a923ca664a6bef\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:51:52 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=H3xBthiABWoqud6%2FsC%2FA7tLCmm814gvvia9NnhOvrtIVkmG7O5nXHy6M%2FLn7%2FrDOGrWOjCswN3sQfyGm15G3zk%2FgpiVQe164z%2Bg1hBG2fVKitRNQhqD7W3pEvh1xc48W1P9Wb6heM0o5\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe33617ad1c9f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:51:52 168</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 168</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 168</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 168</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 168</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 168</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 168</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"739b772d0fb1405197a923ca664a6bef\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-29T07:51:52.503+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  get By response body：200，except value：200 assert result istrue<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  拿到真实数据为：739b772d0fb1405197a923ca664a6bef<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=739b772d0fb1405197a923ca664a6bef)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=739b772d0fb1405197a923ca664a6bef)<br><br><span style = \'color:blue\'>2023-08-29 15:51:52 673</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1696430585221754881', '1693904735972724737', 0, '2023-08-29 15:52:23', '2023-08-29 15:52:24', 460, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:52:24 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=lQDFz5ilxU01dwcEW8BK6NeWf6KCxGDhbTdrCWG1piTShCvdJIuQ5U11y8skEB1zc%2Fl%2B3is99MC6I5iv8VA7od%2BFigebEoZEyhgJ7pgm%2Bh%2Fit%2FI88EX27fc5BmAs9058yVzKpZnvJAQw\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe336ddbb129f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:52:23 855</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-29 15:52:23 855</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-29 15:52:23 855</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:52:23 855</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-29 15:52:23 855</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:52:23 855</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:52:23 855</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 316</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 316</span>  get By response body：1004，except value：200 assert result isfalse<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 316</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 316</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 317</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1696430587482484737', '1693904735972724737', 1, '2023-08-29 15:52:24', '2023-08-29 15:52:24', 495, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-29T07:52:24.686+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"77e071cc235a453086c0aae54c21df56\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:52:24 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=uyKlK2RdxwVwRuoYajdUBz7f4cw7JotEwfIanGzIHmg5mAnTNPz9lUgOUmAl%2FCIcbs4JunJvxKR2Mp68qPz6rSZUJG%2F%2FaeUVWgcKbW57bGg%2BvOTj9f0%2BOSxZWQkNXVu4WB3HQX8YM0o8\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe336e0de0c9f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:52:24 356</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 356</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 356</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 356</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 356</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 356</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 356</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 852</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"77e071cc235a453086c0aae54c21df56\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-29T07:52:24.686+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 853</span>  get By response body：200，except value：200 assert result istrue<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 853</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 853</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 853</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 853</span>  拿到真实数据为：77e071cc235a453086c0aae54c21df56<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 853</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=77e071cc235a453086c0aae54c21df56)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 853</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=77e071cc235a453086c0aae54c21df56)<br><br><span style = \'color:blue\'>2023-08-29 15:52:24 853</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1696431085950349313', '1693904735972724737', 0, '2023-08-29 15:54:22', '2023-08-29 15:54:23', 1547, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:54:23 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=XC0B2lxrEA%2B6YOxAiZz%2FlgL6etBFjF3Idoj5v6bRJh4OUkKcyUrr7XMtX6e0MbNu%2FI%2FiohS2XruLSzEwqiTaQ9AtVfyae1SX4%2FDqSdixQ6XI3HcPogEta%2FROeb%2BUN04khfBryXoePZl1\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe339c11d8f9f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:54:22 154</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-29 15:54:22 154</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-29 15:54:22 154</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:54:22 154</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-29 15:54:22 154</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:54:22 154</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:22 154</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  get By response body：1004，except value：200 assert result isfalse<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 701</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1696431089427427330', '1693904735972724737', 1, '2023-08-29 15:54:23', '2023-08-29 15:54:24', 777, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-29T07:54:24.362+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"dcfbc4afa91e4d6dac79bad686e24eb2\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:54:24 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Y8dd6R1KY27ro%2FchQS7zby0VkmvnmB4zNoqr7iIbBGkzLImqP%2FU5jQbrHIKiTwB55f6GOVSgnpbg8gOKr8T11v%2F8sYYxnHYR1B%2FnyvOCqBZfNdKkHSPmV1K%2B024i2S1ytgJnZReoOmsR\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe339ccd9149f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:54:23 750</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 751</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 751</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 751</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 751</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 751</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:23 751</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"dcfbc4afa91e4d6dac79bad686e24eb2\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-29T07:54:24.362+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  get By response body：200，except value：200 assert result istrue<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  拿到真实数据为：dcfbc4afa91e4d6dac79bad686e24eb2<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=dcfbc4afa91e4d6dac79bad686e24eb2)<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=dcfbc4afa91e4d6dac79bad686e24eb2)<br><br><span style = \'color:blue\'>2023-08-29 15:54:24 529</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1696431131689234433', '1693904735972724737', 0, '2023-08-29 15:54:34', '2023-08-29 15:54:34', 449, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:54:34 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=4Vs0QNZWewM4xk83yl4CH4L9atFNTRrG9%2FRcn3HPIBb3%2FMCVq9CgNuUdkl4TRHyYHQz0VaLVdHV14QDRIgHtqn82rZ1%2BJoEhEKCBxz3158DVuWx%2Bi%2FjyEIwQym650GKqQxbxwurtidHq\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe33a0c19a49f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:54:34 156</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 156</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 156</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 156</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 156</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 156</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 156</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  get By response body：1004，except value：200 assert result isfalse<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 606</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1696431133924798465', '1693904735972724737', 1, '2023-08-29 15:54:34', '2023-08-29 15:54:35', 491, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-29T07:54:34.972+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"20f1717e2c13411cb62191f98bd4e2a2\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 29 Aug 2023 07:54:35 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Yv28s6esJYGrdw2cPc7jt46OG%2F5wHXkFfo3%2FcyjxjKAtXADEBr07VsT4SJcQbwsUHauhVC26s1rd%2BRyNhPh83K9XC61edYYTBCFU0C6EIJrwucD%2BzVgSHCHsgiNmogacvWX7djN8QCVD\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7fe33a0f2d739f8c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-29 15:54:34 648</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 648</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 648</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 648</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 648</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 648</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-29 15:54:34 648</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 140</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"20f1717e2c13411cb62191f98bd4e2a2\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-29T07:54:34.972+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 141</span>  get By response body：200，except value：200 assert result istrue<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 141</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 141</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 141</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 141</span>  拿到真实数据为：20f1717e2c13411cb62191f98bd4e2a2<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 141</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=20f1717e2c13411cb62191f98bd4e2a2)<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 141</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=20f1717e2c13411cb62191f98bd4e2a2)<br><br><span style = \'color:blue\'>2023-08-29 15:54:35 141</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697080394756665346', '1693904735972724737', 0, '2023-08-31 10:54:28', '2023-08-31 10:54:30', 2011, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 02:54:31 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=vcFSTCnWhgQubLpaWkDVFN568H2B7AXq7c3A0C%2BatWU5eTWEfmanqnhNBVE7hLKtp0z7J%2BkWK0a8e0btON%2Bps32ZTPTHQt5ORy2J5YVZS047%2BXo9A3mzkhLeJKQ%2B5gT3bY7NqtR9ZcVo\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff1fd3e3c0f3e1a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 10:54:28 947</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 10:54:28 947</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 10:54:28 947</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 10:54:28 952</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 10:54:28 952</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:54:28 953</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:54:28 953</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 965</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 966</span>  判断的响应内容是：1004，预期值是：200 断言结果是：false<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 967</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 967</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 967</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 967</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 10:54:30 968</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1697080397227110402', '1693904735972724737', 1, '2023-08-31 10:54:31', '2023-08-31 10:54:31', 535, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-31T02:54:31.979+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"d71aa2ed0f544c26b7f2d9ebef75baa4\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 02:54:32 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2FzicXaKHGeaOIH%2BM7Le0u9yTifQCi8nFDJUnbdFrydTBpYOr7iOR%2F5jdJ18gd5D2AXp3EwhZM1oy8LItS7t7IJTmSvC7jR%2F4qtgAPufwM%2Bo512LIOrOUM0owIp9scHVUHsvJTfvpZUwW\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff1fd486f7e3e1a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 10:54:31 36</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 37</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 37</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 37</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 37</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 37</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 37</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 572</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"d71aa2ed0f544c26b7f2d9ebef75baa4\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T02:54:31.979+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 573</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 573</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 573</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 573</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 573</span>  拿到真实数据为：d71aa2ed0f544c26b7f2d9ebef75baa4<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 573</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=d71aa2ed0f544c26b7f2d9ebef75baa4)<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 573</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=d71aa2ed0f544c26b7f2d9ebef75baa4)<br><br><span style = \'color:blue\'>2023-08-31 10:54:31 573</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697081006764339201', '1693904735972724737', 0, '2023-08-31 10:56:55', '2023-08-31 10:56:56', 1549, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 02:56:57 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=d2pGhDOfJCI7VrPmyQxvss6lMtCInCCcektS1FUZoXNUgxjGtrBrV7r0r5Ip%2BAoYn2aZuLTN1KvDs4WRL6ybQ9RJJ13s9%2BP4nyoGJTzx2g%2FrlA8L3kFBd%2Bveh0AWcIz7gnrGWHVehvHz\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff200ce6fdc3e1a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 10:56:55 353</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 10:56:55 353</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 10:56:55 353</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 10:56:55 353</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 10:56:55 353</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:56:55 353</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:56:55 353</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  判断的响应内容是：1004，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 903</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 904</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1697081009234784257', '1693904735972724737', 1, '2023-08-31 10:56:56', '2023-08-31 10:56:57', 517, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-31T02:56:57.908+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"a41d8668ecf0435984e8e3176c9a8525\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 02:56:58 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Z95oCdJN%2Bvti9kg25XpS8MBX6S6PoempQFy8NN%2B10cK7QxRYNdPDKgHsqggopXupJGtMNL6BnorHkZyj1hl3DAUH4m8d%2BRly5maX32yXPu1TAvcHiy7WhzoSzsTz9ZqlhqWLd7w%2FOekj\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff200d88b283e1a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 10:56:56 978</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 978</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 978</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 978</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 978</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 978</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:56:56 978</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"a41d8668ecf0435984e8e3176c9a8525\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T02:56:57.908+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  拿到真实数据为：a41d8668ecf0435984e8e3176c9a8525<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=a41d8668ecf0435984e8e3176c9a8525)<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=a41d8668ecf0435984e8e3176c9a8525)<br><br><span style = \'color:blue\'>2023-08-31 10:56:57 496</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697081367671615489', '1693904735972724737', 0, '2023-08-31 10:58:21', '2023-08-31 10:58:22', 1601, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 02:58:23 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=fNvzKw5nO1qgzZLcGIH%2BvvwUCeiakO%2BxRv3aMebPf9rHIE6iX99o9bXhBNhAF%2FmBQEfJSDyq08BoxZX3Is%2B6gyHn%2Fg7Fp43cAYIeLRJpf%2BZAhkkP3JsasO1Yxb02TetbOCnwVc3oWGJN\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff202e7ee663e1a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 10:58:21 346</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 10:58:21 346</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 10:58:21 346</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 10:58:21 346</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 10:58:21 346</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:58:21 346</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:58:21 346</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  判断的响应内容是：1004，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 947</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 948</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1697081370070757378', '1693904735972724737', 1, '2023-08-31 10:58:22', '2023-08-31 10:58:23', 532, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-31T02:58:23.928+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"bf7d03317ca5418cb228926d82490311\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 02:58:24 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=8B5M8XTH6wkNMeSaLWJx9uu%2BAgNAJgUeP5KtPCHyVezM0idC%2BQ1ulDcl4WoOfdb5M%2FcAvmeGk%2FH22B4lxRTcCe1SqYsRTC2e8Q2YnQ4ilZxjqiEtXqgAmijm%2FtHZ3nRIYDBXCspdz0W7\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff202f21a9f3e1a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 10:58:22 990</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 990</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 990</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 991</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 991</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 991</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 10:58:22 991</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"bf7d03317ca5418cb228926d82490311\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T02:58:23.928+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  拿到真实数据为：bf7d03317ca5418cb228926d82490311<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=bf7d03317ca5418cb228926d82490311)<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=bf7d03317ca5418cb228926d82490311)<br><br><span style = \'color:blue\'>2023-08-31 10:58:23 523</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697082274396254210', '1693904735972724737', 0, '2023-08-31 11:01:57', '2023-08-31 11:01:59', 1942, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:01:59 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=y8pX%2Fuf9Vxx%2FPnOzMJKaOxlfT3wMJJT4BhBcyTblhgasIpPb2pKbs7z%2F8pxDo73fgXUfLdoR2g8tkMpbFEQ73UbkOxc5sOPjRwf6EUgvOF2%2FehneZVahvD7%2FBQ480ScgwKF3T%2FjybW%2FT\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff2082ecbc140f6-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:01:57 161</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:01:57 161</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:01:57 161</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:01:57 164</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:01:57 164</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:01:57 164</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:01:57 165</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 108</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 110</span>  判断的响应内容是：1004，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 111</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 112</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 112</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 112</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 112</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 112</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 112</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1697082276912836609', '1693904735972724737', 1, '2023-08-31 11:01:59', '2023-08-31 11:01:59', 542, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-31T03:02:00.125+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"8062c143e9824503ae7a31cdf7cd2c38\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:02:00 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=f%2BwtodODjoVRi%2BnfPy0YFrwydchVehTa5bKlgbeeQK31lQNeeK78eQ5UnW0FSgmmt9aJnb8rs7t4%2BxR3jt64lVReS4q0BknIqIKEO%2FlAZMdQx49LlNfOnaNcmua63%2Fnyft2yIzhwZ9KU\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff208394ed740f6-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:01:59 174</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 175</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 175</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 175</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 175</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 175</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 175</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 717</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"8062c143e9824503ae7a31cdf7cd2c38\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T03:02:00.125+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 718</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 718</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 718</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 718</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 718</span>  拿到真实数据为：8062c143e9824503ae7a31cdf7cd2c38<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 718</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=8062c143e9824503ae7a31cdf7cd2c38)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 718</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=8062c143e9824503ae7a31cdf7cd2c38)<br><br><span style = \'color:blue\'>2023-08-31 11:01:59 718</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697082763083001857', '1693904735972724737', 1, '2023-08-31 11:03:53', '2023-08-31 11:03:55', 1648, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:03:56 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=zYHfPTypZDcJiYmnxRTD8Dfqkkow%2F%2Fqc3LZiD5BSCAlEg7hrwxaz5mGMjSl2aJ%2BSks%2Bsj6qBCd%2FV9BE27245uOvDYJ6tSKYoKZvVkZ9YYxuiG2O%2FaVf56l40BbuERVtba3H54dSPBfHx\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff20b06ec3d40f6-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:03:53 987</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:03:53 987</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:03:53 987</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:03:53 987</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:03:53 987</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:03:53 988</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:03:53 988</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 636</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 637</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 637</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 637</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 637</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 637</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 637</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 637</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 637</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1697082765549252609', '1693904735972724737', 1, '2023-08-31 11:03:55', '2023-08-31 11:03:56', 529, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-31T03:03:56.639+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"d0ade80b03814b8daf58cc193dcf52a3\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:03:56 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2Fm7Z%2BYdLD%2FEBEvyLe1jHU0IXGXp%2By6rZFXNrmGIdMUqB8ouL5hPJ5Lb1f74anB%2FwjZ2e8hRU8ErClX%2FmK6ZoF6TdHEW2hm6fXmUweKgDkcv54FIYo1QGmkZ2Feo049TfsxxI35gsSXQP\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff20b11886640f6-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:03:55 694</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 694</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 694</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 695</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 695</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 695</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:03:55 695</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"d0ade80b03814b8daf58cc193dcf52a3\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T03:03:56.639+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  拿到真实数据为：d0ade80b03814b8daf58cc193dcf52a3<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=d0ade80b03814b8daf58cc193dcf52a3)<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=d0ade80b03814b8daf58cc193dcf52a3)<br><br><span style = \'color:blue\'>2023-08-31 11:03:56 224</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697089196658798594', '1693904735972724737', 1, '2023-08-31 11:29:27', '2023-08-31 11:29:29', 1829, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:29:30 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=sE94qGf0CF0mcJ%2BUcvmpywOxiTjQUt2ytxNdDCtWqkYRbpxQqN1eOhjNodGgzT0TcGTApXW8CRQIsfhf0q3gzr0dcQIKe0S9VjyMAxUQcV1eYtkmlXMCY4VHKcXhQMdOXEzaGaxGds82\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff2307a3c46a11c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:29:27 692</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:29:27 692</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:29:27 692</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:29:27 692</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:29:27 692</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:29:27 692</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:29:27 692</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 521</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 522</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 522</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1697089198999220225', '1693904735972724737', 1, '2023-08-31 11:29:29', '2023-08-31 11:29:30', 525, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-31T03:29:30.512+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"dc134ce2d1b34287a72c8c64e2bdbcb0\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:29:30 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Y0qHK3VzHEROlgtd1psD%2FZy5sTU2oui8Uh2CQbojoo2iNPNbnAfD0YuRyjiEgFbBNuEXAdkT6yKSnU5CeVcNi2FKW%2F1uXyDqHM%2FAr8fmT3MNeJPPS92qoIMH37h9iS%2Fopxh9AzSdTRlJ\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff230843ed0a11c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:29:29 566</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 566</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 566</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 566</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 566</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 567</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:29:29 567</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"dc134ce2d1b34287a72c8c64e2bdbcb0\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T03:29:30.512+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  拿到真实数据为：dc134ce2d1b34287a72c8c64e2bdbcb0<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=dc134ce2d1b34287a72c8c64e2bdbcb0)<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=dc134ce2d1b34287a72c8c64e2bdbcb0)<br><br><span style = \'color:blue\'>2023-08-31 11:29:30 93</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697090722131357698', '1693904735972724737', 1, '2023-08-31 11:35:31', '2023-08-31 11:35:33', 1903, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:35:33 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=NJ10E6xmuOYctMHCYvTWIpuls39s1nxjbOwvP9UvEqwPfMkrIdvZFt%2BhxS8QktzsTktdm7wZJm5STXH%2BKtM5rpvjWRcE2%2F3%2FL9MgCDjZxHol9jGCJ5z97cfJwGmA1EodrgRbR6rQcqdx\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff2395b3cc64018-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:35:31 301</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:35:31 301</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:35:31 301</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:35:31 303</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:35:31 303</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:35:31 304</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:35:31 304</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 208</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 210</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 210</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:35:33 211</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697091646748897281', '1693904735972724737', 1, '2023-08-31 11:39:11', '2023-08-31 11:39:13', 1889, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:39:14 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ZXP9hUh7oGGvqDBAHdcnBTUgHOC4Sue1PAZNYuTbXw7y9p9PSq91SWQRRm8akmLhHBDonrT1RRDkqKKYkPBRPg31rVKWBEMA3FhooZICb78fn8N7tiK6LoemDb%2FKekn8UCAUs%2FX3XUDZ\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff23ebd0aaa898c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:39:11 756</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:39:11 757</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:39:11 757</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:39:11 759</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:39:11 760</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:39:11 760</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:39:11 760</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 650</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 651</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 652</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 652</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 652</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 652</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 652</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 653</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697092386770923521', '1693904735972724737', 1, '2023-08-31 11:42:08', '2023-08-31 11:42:10', 1540, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:42:10 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=biHS7iH%2B6L5sCnSgqKUiGr7Di2oP0lpb7hFls2G5mL6sY8ei2c7bjI7PhcIagJuHF9e376NM2lQ%2F4lqZWjctWmivprkTJa18tL6GbwiazqTnwB%2B1sHSuFkORo9psvZJSb8dOLmNOI2CE\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff2430c0906898c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:39:13 707</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 708</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 708</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 708</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 708</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 708</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:39:13 708</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:39:14 260</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"731d1e97935c45acb92e604e10c4b9f1\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T03:39:14.636+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 11:42:08 560</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:42:08 560</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:42:08 560</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:42:08 560</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:42:08 560</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:42:08 560</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:42:08 560</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 101</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 102</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697092609886924802', '1693904735972724737', 1, '2023-08-31 11:43:02', '2023-08-31 11:43:03', 486, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:43:03 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=YMN1WEgW7MF2xtRzfdrS9SF945Rx8Xd%2BJ0XOCSctwqBpg4M4gNv1dVyl1ozFzZHKIToSqXcCxYfFNsDj5T7lMHMOOeoSvtc%2Bvg2MC%2FcviIZxjBR1kY%2BJlsIlzjpBH4LPR1wT0RntzVxA\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff2445f0ae0898c-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:42:10 148</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 149</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 149</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 149</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 149</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 149</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 149</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": null,\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:42:10 678</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"7b08be3424cd4ea7a6ea90be9a4ab0fb\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T03:42:11.100+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 11:43:02 811</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:43:02 812</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:43:02 812</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:43:02 812</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:43:02 812</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:43:02 812</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:43:02 812</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 299</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:43:03 300</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697093044290990081', '1693904735972724737', 1, '2023-08-31 11:44:44', '2023-08-31 11:44:46', 1974, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:44:47 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=MT1yg1vJM0rdP6YN1zxZXYHXKBl5q7IxNtcprdYoyQiFV9gFoRTCk5rAZXkciNMz4Ji2jQf7v6z0u%2Fqt7%2FF%2B75TKBMchk5jpYqbwqgTigkygqXDILPuQP%2FOh8vNt8SBBEAdc2vXxve%2BM\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff246def9fb3fd1-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:44:44 871</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:44:44 871</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:44:44 872</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:44:44 874</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:44:44 874</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:44:44 875</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:44:44 875</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 850</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 852</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 852</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 853</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 854</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 854</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 854</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:44:46 854</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697094864610537473', '1693904735972724737', 1, '2023-08-31 11:51:58', '2023-08-31 11:52:00', 1968, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:52:01 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=h3vutm2LO0BERp4BUzvKIsIkB%2Bc9YRcA8w94Xfi2rW4VYi9ApsyCaE37tdGNQIeCE01kZFHNyeEiREhg%2FNf7BUL7%2FMR1DhB4iMCVm91233SkvW%2B3octLP9dO2bnG4hQ%2B9ANNE%2FWum%2FZR\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff251781e2c4d96-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:51:58 877</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:51:58 877</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:51:58 877</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:51:58 880</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:51:58 880</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:51:58 881</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:51:58 881</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 850</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 852</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 853</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 853</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 853</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:52:00 854</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697095336637509633', '1693904735972724737', 1, '2023-08-31 11:53:51', '2023-08-31 11:53:53', 2002, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:53:53 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=q1KcftmG4uvrfKF5qGh5EnZxk8A2JucUeuhiQUKLssBxOWba9H3JpB8tJCDjxdDErSwA8Bca%2BI%2Fyn6jH4kn7EvSYcdVbPesryv085DeQ3sR%2B036UuY8%2Fxw8xNEasIgAQ7LIDT%2BqBsGvJ\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff254373e444a02-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:53:51 390</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:53:51 391</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:53:51 391</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:53:51 394</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:53:51 394</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:53:51 394</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:53:51 394</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 397</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 399</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 400</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 400</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 400</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 400</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:53:53 401</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1697095899580215298', '1693904735972724737', 1, '2023-08-31 11:56:05', '2023-08-31 11:56:07', 1976, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\n    \\\"account\\\":\\\"zhangjun_0822_106@qq.com\\\",\\n    \\\"password\\\":\\\"zj123456\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"user_exists\", \"code\": 1004, \"data\": {}, \"message\": \"user_exists\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:56:08 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=tXbwnKibTcqdRrgnUXV4dHzv6NzSe%2FNyOzzPCbJbxKlj6HajFepim0mjd438KV0rK3KWCZsoXSInfkRj76H9kmGc13cSdkn%2BHZO5Lvia2obTsp6bwp0ZDZsCISlAcEqGWFU0YX5SnfX8\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff2577e3bec8953-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:56:05 624</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-08-31 11:56:05 624</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-08-31 11:56:05 625</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:56:05 627</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-08-31 11:56:05 627</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:56:05 628</span>  用例名称：register_user_success, replace data：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:56:05 628</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 605</span>  用例名称：register_user_success,响应体的数据：{\"code\":1004,\"data\":{},\"msg\":\"user_exists\",\"message\":\"user_exists\"}<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 607</span>  判断的响应内容是：user_exists，预期值是：user_exists 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 608</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 608</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 608</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 608</span>  拿到真实数据为：null<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 608</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 608</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramsEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 608</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 608</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  替换后真实的值为：zhangjun_0822_106@qq.com<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=account, paramFrom=requestBody, paramsEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_0822_106@qq.com)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  替换前的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  请求参数为：{\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\n    \"account\":\"zhangjun_0822_106@qq.com\",\n    \"password\":\"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  替换后的参数对象为:ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(caseName=register_user_success, paramName=password, paramFrom=requestBody, paramsEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 609</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1697095901991940097', '1693904735972724737', 1, '2023-08-31 11:56:07', '2023-08-31 11:56:08', 525, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64e733f476c9763cf91456e7\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_0822_106@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-08-31T03:56:08.622+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-08-24T10:41:56.120+00:00\", \"last_name\": \"\", \"nick_name\": \"User2095352019\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"11de642d01684d2cab18478395265a47\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Thu, 31 Aug 2023 03:56:08 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=IzmO4xtvrqhYfcMGDHM5LBdsp%2F0BN3Z558TN4LUXjFMNtTcC3UMEKqTDpPDdJfYZM8FyTbt0v%2F%2Bfnzydh0%2B3bGPY3w6q32WlXlvxcaEnjkA0NLxjEkHu7xNRU%2BSpzvhRvh%2Bw8OuxfulT\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"7ff257886feb8953-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-08-31 11:56:07 671</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 671</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 671</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 672</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 672</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 672</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-08-31 11:56:07 672</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_0822_106@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 197</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"11de642d01684d2cab18478395265a47\",\"user\":{\"_id\":\"64e733f476c9763cf91456e7\",\"account\":\"zhangjun_0822_106@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-08-24T10:41:56.120+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-08-31T03:56:08.622+00:00\",\"nick_name\":\"User2095352019\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 198</span>  判断的响应内容是：null，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 198</span>  替换前的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 198</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 198</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 198</span>  拿到真实数据为：11de642d01684d2cab18478395265a47<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 198</span>  替换后的参数对象为:ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=11de642d01684d2cab18478395265a47)<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 198</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(caseName=login_user_success, paramName=token, paramFrom=responseBody, paramsEq=token\\\":\\\"(.*?)\\\",, paramValue=11de642d01684d2cab18478395265a47)<br><br><span style = \'color:blue\'>2023-08-31 11:56:08 198</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1698628181822578689', '1693904735972724737', 0, '2023-09-04 17:24:50', '2023-09-04 17:24:52', 1777, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f5a26476c9763cf9145701\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693819490346_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-04T09:24:52.650+00:00\", \"last_name\": \"\", \"nick_name\": \"User2344156493\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Mon, 04 Sep 2023 09:24:52 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=VzXcFI%2BpIRrT%2BGMxzQznOS2r0n7ranK5cfTqHrt9keOnrSvLw250rhTsy8KVlLgJBNT5aoYV%2Bl8vg7DL0lPZolRK9M2skg5IQQHurT4d92ouA2EoR7wXn3q8lyUstnGCd2peGt3AplM%2B\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80152e8d5c42463d-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-04 17:24:50 343</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-04 17:24:50 343</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-04 17:24:50 343</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-04 17:24:50 345</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-04 17:24:50 345</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-04 17:24:50 346</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693819490346_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-04 17:24:50 346</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693819490346_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 125</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f5a26476c9763cf9145701\",\"account\":\"zhangjun_1693819490346_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-04T09:24:52.650+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User2344156493\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 127</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 128</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  拿到真实数据为：64f5a26476c9763cf9145701<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f5a26476c9763cf9145701)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f5a26476c9763cf9145701)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693819490346_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  替换后真实的值为：zhangjun_1693819490346_1@qq.com<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693819490346_1@qq.com)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693819490346_1@qq.com)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693819490346_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 129</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1698628184838283266', '1693904735972724737', 1, '2023-09-04 17:24:52', '2023-09-04 17:24:52', 633, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f5a26476c9763cf9145701\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693819490346_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-04T09:24:53.418+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-04T09:24:52.650+00:00\", \"last_name\": \"\", \"nick_name\": \"User2344156493\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"c244a4ea395943fbadeaab1ddbd57d28\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Mon, 04 Sep 2023 09:24:53 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=AjVL2WMG9HidZp7ZAVL32WOu7PXdTbjVkUN2ibrMtifBn7R%2Bx4bLBEtqZZxQHyh5Gs2HX6BZFc2XIB%2Bw5inmT2GLhtbOm9H5aqBiy6pySibbTQ64vH%2BHWD2IW1wNam08pCuPZDdqS84f\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80152e979fb0463d-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-04 17:24:52 262</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 262</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 262</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 262</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693819490346_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 262</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 262</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693819490346_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 262</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693819490346_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 895</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"c244a4ea395943fbadeaab1ddbd57d28\",\"user\":{\"_id\":\"64f5a26476c9763cf9145701\",\"account\":\"zhangjun_1693819490346_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-04T09:24:52.650+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-04T09:24:53.418+00:00\",\"nick_name\":\"User2344156493\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 896</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 896</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 896</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 896</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 896</span>  拿到真实数据为：c244a4ea395943fbadeaab1ddbd57d28<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 896</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=c244a4ea395943fbadeaab1ddbd57d28)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 896</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=c244a4ea395943fbadeaab1ddbd57d28)<br><br><span style = \'color:blue\'>2023-09-04 17:24:52 896</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1698969347176833026', '1693904735972724737', 0, '2023-09-05 16:00:30', '2023-09-05 16:00:32', 1811, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f6e02076c9763cf9145707\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693900830513_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T08:00:32.147+00:00\", \"last_name\": \"\", \"nick_name\": \"User1505427687\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 08:00:32 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=JE5dyr%2F9hoNCXR14fOf%2Fb8MOch6p58X5GVkmfWAuxh3BO2y%2BBFra%2FDcGxNcB3ltH4fgSlVe3Kaxo9mNAXKmLp9IlyygtuDZLN%2FxGi7N%2Fhkd7tzZNFwwgSeZkra7SikGuEi7OwS7mGAQh\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801cf0611954466d-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 16:00:30 512</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 16:00:30 512</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 16:00:30 512</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 16:00:30 513</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 16:00:30 513</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 16:00:30 514</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693900830513_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 16:00:30 514</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693900830513_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 325</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f6e02076c9763cf9145707\",\"account\":\"zhangjun_1693900830513_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T08:00:32.147+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User1505427687\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  拿到真实数据为：64f6e02076c9763cf9145707<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f6e02076c9763cf9145707)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f6e02076c9763cf9145707)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693900830513_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  替换后真实的值为：zhangjun_1693900830513_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693900830513_1@qq.com)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693900830513_1@qq.com)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 326</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 327</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 327</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693900830513_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 327</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 327</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 327</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 327</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1698969349831827457', '1693904735972724737', 1, '2023-09-05 16:00:32', '2023-09-05 16:00:32', 580, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f6e02076c9763cf9145707\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693900830513_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T08:00:32.796+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T08:00:32.147+00:00\", \"last_name\": \"\", \"nick_name\": \"User1505427687\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"85821f5d6a6248898164ea51947b43a3\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 08:00:32 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ogfWFlKIJWzEco2Cq3jHenVfTLXesHGBqPl4azEOKiN%2FsSuDA4PmKDcoxAbwQPCgeJZG3Me7MJkFK1GYW9hKEugOElzBSSw12EURm98SFqZGqyTcay5zb%2FRBx9Gft6cIjL%2FGmlRyaFnV\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801cf06afeb8466d-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 16:00:32 393</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 393</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 393</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 394</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693900830513_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 394</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 394</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693900830513_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 394</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693900830513_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 974</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"85821f5d6a6248898164ea51947b43a3\",\"user\":{\"_id\":\"64f6e02076c9763cf9145707\",\"account\":\"zhangjun_1693900830513_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T08:00:32.147+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T08:00:32.796+00:00\",\"nick_name\":\"User1505427687\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 974</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 974</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 974</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 974</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 975</span>  拿到真实数据为：85821f5d6a6248898164ea51947b43a3<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 975</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=85821f5d6a6248898164ea51947b43a3)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 975</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=85821f5d6a6248898164ea51947b43a3)<br><br><span style = \'color:blue\'>2023-09-05 16:00:32 975</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699010732072382466', '1693904735972724737', 0, '2023-09-05 18:44:56', '2023-09-05 18:44:59', 2304, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706ab76c9763cf9145708\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910696923_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:44:59.172+00:00\", \"last_name\": \"\", \"nick_name\": \"User5374030479\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:44:59 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=YLFfm0dKh7C8amML6WHoYnzT4s5iuh1RayRq8qfrwC3ojlpd7zziYuTr8d70U2%2F8XVRLauYi%2F30tj23Pekt1HzsnL1gDzn462hBW5Uy%2B3Y0NmER8w5CuSTghHJ2Dky7E%2FIqzuviKWdBo\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de145d8c6406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:44:56 918</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:44:56 919</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:44:56 919</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:44:56 922</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:44:56 923</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:44:56 924</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910696923_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:44:56 924</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910696923_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 229</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f706ab76c9763cf9145708\",\"account\":\"zhangjun_1693910696923_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:44:59.172+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User5374030479\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 232</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 233</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 233</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 233</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 233</span>  拿到真实数据为：64f706ab76c9763cf9145708<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 233</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706ab76c9763cf9145708, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 233</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706ab76c9763cf9145708, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 233</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 233</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910696923_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  替换后真实的值为：zhangjun_1693910696923_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910696923_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910696923_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910696923_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 234</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699010734798680066', '1693904735972724737', 1, '2023-09-05 18:44:59', '2023-09-05 18:44:59', 596, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706ab76c9763cf9145708\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910696923_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:44:59.907+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:44:59.172+00:00\", \"last_name\": \"\", \"nick_name\": \"User5374030479\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"c3f2644ffe8f4d3cbfc4785ea1a3fe5d\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:00 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=5ZY7cCzykq5XtzxYmtFtJO32tpj3k1p6KOwfA3YoA2hjmet3rUatiTGZA1ceeLFJsnxLaVvOx12QsYe%2FaLBbqPrPDIO%2F0fE9vnLOKJ2An9gWE3%2FZ%2BA41Pm51bytP%2FywvRBgcTznfFikU\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de1505d07406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:44:59 322</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 322</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 323</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 323</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910696923_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 323</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 323</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910696923_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 323</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910696923_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 919</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"c3f2644ffe8f4d3cbfc4785ea1a3fe5d\",\"user\":{\"_id\":\"64f706ab76c9763cf9145708\",\"account\":\"zhangjun_1693910696923_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:44:59.172+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:44:59.907+00:00\",\"nick_name\":\"User5374030479\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 920</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 920</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 920</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 920</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 920</span>  拿到真实数据为：c3f2644ffe8f4d3cbfc4785ea1a3fe5d<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 920</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=c3f2644ffe8f4d3cbfc4785ea1a3fe5d, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 920</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=c3f2644ffe8f4d3cbfc4785ea1a3fe5d, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:44:59 920</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699010761268932610', '1693904735972724737', 0, '2023-09-05 18:45:05', '2023-09-05 18:45:06', 457, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706b276c9763cf9145709\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910705769_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:45:06.215+00:00\", \"last_name\": \"\", \"nick_name\": \"User5148390277\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:06 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=sTpHlDPL8YzIldlRs3RMZ7PiyFlZ5zfVcknXxU2o7wVEiGBNbUDUUEX6TPNJKN0K%2ByB2S4a6JXpEqrdoagCm0vKbPClmZUan256ISOqiC859jBAKv%2FU9P%2FPGAkRq8yYbjdo01zLw%2F3bV\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de178a906406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:45:05 769</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:45:05 769</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:45:05 769</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:45:05 769</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:45:05 769</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:05 769</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910705769_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:05 769</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910705769_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f706b276c9763cf9145709\",\"account\":\"zhangjun_1693910705769_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:45:06.215+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User5148390277\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  拿到真实数据为：64f706b276c9763cf9145709<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706b276c9763cf9145709, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706b276c9763cf9145709, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910705769_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  替换后真实的值为：zhangjun_1693910705769_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910705769_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910705769_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 226</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910705769_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 227</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 227</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 227</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 227</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699010763798097921', '1693904735972724737', 1, '2023-09-05 18:45:06', '2023-09-05 18:45:06', 565, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706b276c9763cf9145709\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910705769_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:45:06.819+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:45:06.215+00:00\", \"last_name\": \"\", \"nick_name\": \"User5148390277\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"8b12db3475ba46c2a39421126359219c\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:07 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=QGa9%2Bby%2Bfz8yoqeWKfX%2BKvzIries0DTgX0m2GqV93sdyMemwQdNyKM2tG8MdNuKur8EF3X30c38BU5QmhSPGZMkywKVW%2FA96zImuqxj01g4%2Bt84UdoCT%2BnEkQ%2BRdLdIZVCrJN8idJtdD\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de17bbcce406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:45:06 267</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 267</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 267</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 267</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910705769_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 267</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 267</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910705769_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 267</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910705769_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"8b12db3475ba46c2a39421126359219c\",\"user\":{\"_id\":\"64f706b276c9763cf9145709\",\"account\":\"zhangjun_1693910705769_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:45:06.215+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:45:06.819+00:00\",\"nick_name\":\"User5148390277\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  拿到真实数据为：8b12db3475ba46c2a39421126359219c<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=8b12db3475ba46c2a39421126359219c, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=8b12db3475ba46c2a39421126359219c, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:06 832</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699010789706313730', '1693904735972724737', 0, '2023-09-05 18:45:12', '2023-09-05 18:45:13', 461, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706b976c9763cf914570a\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910712552_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:45:13+00:00\", \"last_name\": \"\", \"nick_name\": \"User3429231272\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:13 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=UKhDk9OGKzj15Sc%2F9QR2ncf5G3TcfN2OSe6hhDGZQEwvOsVmIk5%2Bk%2B%2Fw2IpTU0OX29lbbi6hHtu7ND9mrRac1b7Gh3QWi1g3gKWEZBdR78puls%2FIfTGuI1lIXNzOX0LqkACUJbeRjKKV\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de1a30887406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:45:12 552</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:45:12 552</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:45:12 552</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:45:12 552</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:45:12 552</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:12 552</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910712552_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:12 552</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910712552_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f706b976c9763cf914570a\",\"account\":\"zhangjun_1693910712552_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:45:13+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User3429231272\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  拿到真实数据为：64f706b976c9763cf914570a<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706b976c9763cf914570a, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706b976c9763cf914570a, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910712552_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  替换后真实的值为：zhangjun_1693910712552_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910712552_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910712552_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910712552_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 14</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699010792281616386', '1693904735972724737', 1, '2023-09-05 18:45:13', '2023-09-05 18:45:13', 569, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706b976c9763cf914570a\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910712552_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:45:13.610+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:45:13+00:00\", \"last_name\": \"\", \"nick_name\": \"User3429231272\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"8bde8d041f244189b5f74f905f9030c8\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:13 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=i8hdfnEfFTY4yfPDfaVq5V2co2JNTJ8%2BrYsjSYKoNT9qZqDzBBi5cEhofXDZlegoWL9fyJAvXPbhYYSuYWq1xFJY4SsmwWh8Oqx7dH9a91yOi8dfYjyd5T5MkJWDs18cWTvX%2FM5WGn%2B8\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de1a62c9d406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:45:13 52</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 52</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 52</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 53</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910712552_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 53</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 53</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910712552_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 53</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910712552_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"8bde8d041f244189b5f74f905f9030c8\",\"user\":{\"_id\":\"64f706b976c9763cf914570a\",\"account\":\"zhangjun_1693910712552_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:45:13+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:45:13.610+00:00\",\"nick_name\":\"User3429231272\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  拿到真实数据为：8bde8d041f244189b5f74f905f9030c8<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=8bde8d041f244189b5f74f905f9030c8, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=8bde8d041f244189b5f74f905f9030c8, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:13 623</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699010815807467521', '1693904735972724737', 0, '2023-09-05 18:45:18', '2023-09-05 18:45:19', 462, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706bf76c9763cf914570b\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910718768_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:45:19.213+00:00\", \"last_name\": \"\", \"nick_name\": \"User1715689144\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:19 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=4%2B2INdl4if8mo4ZMM18r5528JkLNTrMy5Neoh9hHlKIXU4wrdmufoEKB5ngMw%2FiCRFCQuXhf6BvmJfXKdmdXkQEQae623wej2WAM8Fk9YMS3gtyojQUQgAU%2FAXXtUmwPJwsz6wJ4MwVw\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de1c9d849406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:45:18 768</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:45:18 768</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:45:18 768</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:45:18 768</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:45:18 768</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:18 768</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910718768_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:18 769</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910718768_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f706bf76c9763cf914570b\",\"account\":\"zhangjun_1693910718768_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:45:19.213+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User1715689144\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  拿到真实数据为：64f706bf76c9763cf914570b<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706bf76c9763cf914570b, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706bf76c9763cf914570b, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910718768_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  替换后真实的值为：zhangjun_1693910718768_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910718768_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910718768_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910718768_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 232</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699010818529570818', '1693904735972724737', 1, '2023-09-05 18:45:19', '2023-09-05 18:45:19', 616, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706bf76c9763cf914570b\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910718768_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:45:19.866+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:45:19.213+00:00\", \"last_name\": \"\", \"nick_name\": \"User1715689144\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"f262c36c04794ee2b9e913348b5a2ae2\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:20 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=zJYehHolExb3qncwMMdiopBlxTH0oYmiFnrj8FtIlWWokng8gHljuh9sNSp4Rm3gyPFPwwXasWBdYudGDzs48seY0BxzJ%2Bp7M5Bi19yxZY%2ByTWBDFnR4yBwgx%2FIo%2Bjr33IMUnwXUGE%2Ff\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de1ccfc22406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:45:19 262</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 262</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 262</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 263</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910718768_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 263</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 263</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910718768_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 263</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910718768_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 880</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"f262c36c04794ee2b9e913348b5a2ae2\",\"user\":{\"_id\":\"64f706bf76c9763cf914570b\",\"account\":\"zhangjun_1693910718768_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:45:19.213+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:45:19.866+00:00\",\"nick_name\":\"User1715689144\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 881</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 881</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 881</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 881</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 881</span>  拿到真实数据为：f262c36c04794ee2b9e913348b5a2ae2<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 881</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=f262c36c04794ee2b9e913348b5a2ae2, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 881</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=f262c36c04794ee2b9e913348b5a2ae2, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:19 881</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699010926751002625', '1693904735972724737', 0, '2023-09-05 18:45:45', '2023-09-05 18:45:45', 477, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706d976c9763cf914570c\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910745207_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:45:45.674+00:00\", \"last_name\": \"\", \"nick_name\": \"User8087092766\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:45 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=mAcmlL983UYYXb7cG5oNHUMr8byyUxKM6jONTp%2FS%2FqstmRhVLTuvrGcIeEzt87K1k3Pi3dUW%2B9R3TeYzQkzAWMSe%2ByE5yBjLdlQpBxWQy8TF%2BEvNDSLR1v%2FVaZ5tRHFw5DmHD69mwJpn\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de26f2b6b406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:45:45 207</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 207</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 207</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 207</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 207</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 207</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910745207_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 207</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910745207_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f706d976c9763cf914570c\",\"account\":\"zhangjun_1693910745207_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:45:45.674+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User8087092766\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  拿到真实数据为：64f706d976c9763cf914570c<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706d976c9763cf914570c, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706d976c9763cf914570c, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910745207_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  替换后真实的值为：zhangjun_1693910745207_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910745207_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910745207_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910745207_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 688</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699010929179504642', '1693904735972724737', 1, '2023-09-05 18:45:45', '2023-09-05 18:45:46', 545, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706d976c9763cf914570c\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910745207_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:45:46.258+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:45:45.674+00:00\", \"last_name\": \"\", \"nick_name\": \"User8087092766\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"8bf53c6830d14e3b9698ad7b7651f673\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:45:46 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=KTGN6bKW49S7e5it%2FgB7nfvfhfhBNVi6U7LwcFRl%2F9SPzwuBL%2BMc7qm3O1Ecgqt1XAAdnjs0GObAgXZ3oLYLbI5F1qQlgh8v6GmA1gxgK0Wx%2BvEVjGr2HPAVhBX6JZ9fRmF2u62uw8%2Bl\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de2725ee0406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:45:45 724</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 724</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 724</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 725</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910745207_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 725</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 725</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910745207_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:45:45 725</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910745207_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"8bf53c6830d14e3b9698ad7b7651f673\",\"user\":{\"_id\":\"64f706d976c9763cf914570c\",\"account\":\"zhangjun_1693910745207_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:45:45.674+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:45:46.258+00:00\",\"nick_name\":\"User8087092766\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  拿到真实数据为：8bf53c6830d14e3b9698ad7b7651f673<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=8bf53c6830d14e3b9698ad7b7651f673, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=8bf53c6830d14e3b9698ad7b7651f673, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:45:46 271</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699011075678154753', '1693904735972724737', 0, '2023-09-05 18:46:20', '2023-09-05 18:46:21', 493, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706fd76c9763cf914570d\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910780708_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:46:21.188+00:00\", \"last_name\": \"\", \"nick_name\": \"User5909861294\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:46:21 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=fa348z2NEnN%2FTlsQkItWCGQ7Xni00CM7NribjsTLkLUq3Oq%2FkEg3%2B5h%2B9Obxqj2eUkdFlZLMlFGeP4XfbCTVpn3xgn6Oc%2FSLKjkmUSugPWIUb8DLFjIS7Tism9GBG4PsreuCJUUVksb%2F\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de34d1bc8406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:46:20 708</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:46:20 708</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:46:20 708</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:46:20 708</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:46:20 708</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:46:20 708</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910780708_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:46:20 708</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910780708_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f706fd76c9763cf914570d\",\"account\":\"zhangjun_1693910780708_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:46:21.188+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User5909861294\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  拿到真实数据为：64f706fd76c9763cf914570d<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706fd76c9763cf914570d, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f706fd76c9763cf914570d, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910780708_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  替换后真实的值为：zhangjun_1693910780708_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910780708_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910780708_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910780708_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 201</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699011078052130818', '1693904735972724737', 1, '2023-09-05 18:46:21', '2023-09-05 18:46:21', 526, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f706fd76c9763cf914570d\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910780708_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:46:21.754+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:46:21.188+00:00\", \"last_name\": \"\", \"nick_name\": \"User5909861294\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"cebe1e7fa3c547f1bf6a1e2e5de7836f\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:46:21 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=YAIfKT361%2FRNU4u5%2BG4BYh7AYXNPMdMpAZYEa5uGsgotvTihXqbresCTUSxpBudsxi5tcsXfnTNzBx%2FmUomUSE6S34fyHsduNXoNhn7xUXYnhhQGJm3SQuC9EX1Bd4S92YHDsgBEJCOD\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de3505f7a406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:46:21 240</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 240</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 240</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 240</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910780708_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 240</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 240</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910780708_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 240</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910780708_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"cebe1e7fa3c547f1bf6a1e2e5de7836f\",\"user\":{\"_id\":\"64f706fd76c9763cf914570d\",\"account\":\"zhangjun_1693910780708_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:46:21.188+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:46:21.754+00:00\",\"nick_name\":\"User5909861294\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  拿到真实数据为：cebe1e7fa3c547f1bf6a1e2e5de7836f<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=cebe1e7fa3c547f1bf6a1e2e5de7836f, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=cebe1e7fa3c547f1bf6a1e2e5de7836f, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:46:21 767</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699011239587360770', '1693904735972724737', 0, '2023-09-05 18:46:59', '2023-09-05 18:47:00', 470, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f7072476c9763cf914570e\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910819801_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:47:00.257+00:00\", \"last_name\": \"\", \"nick_name\": \"User0124829996\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:47:00 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=QJT9bWZQv418%2BO3KGMM49h6Eart6qQTchXnTADmy6RdwuLpZXei5LqlmmcDZotbDO7L1ly0aCSax7RJ2gUqj2kfiD522%2FC1RbxCBFvBRHYMENQPKm913tQ5f6FgGE3yG2pbee3mMb%2BVQ\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de4415af9406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:46:59 800</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:46:59 800</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:46:59 800</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:46:59 801</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:46:59 801</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:46:59 801</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910819801_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:46:59 801</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910819801_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f7072476c9763cf914570e\",\"account\":\"zhangjun_1693910819801_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:47:00.257+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User0124829996\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  拿到真实数据为：64f7072476c9763cf914570e<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f7072476c9763cf914570e, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f7072476c9763cf914570e, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910819801_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 271</span>  替换后真实的值为：zhangjun_1693910819801_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910819801_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910819801_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910819801_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 272</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699011242032640001', '1693904735972724737', 1, '2023-09-05 18:47:00', '2023-09-05 18:47:00', 547, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f7072476c9763cf914570e\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910819801_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:47:00.837+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:47:00.257+00:00\", \"last_name\": \"\", \"nick_name\": \"User0124829996\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"86d48ca2041f4887bdf98835b51e3eec\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:47:01 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=uQyXakiqJz7v9tLqBfxdR5bqNlVgn5CMf9qmfNjsLZajzvdFxOdcgsIo4ol6Gy1Z0riXRDYPH7%2B4Xfo9VFHHJhAeBoym3craKcB3bwH3HRQLhoN62HENjLlTYSA3OKXVa9rT%2B100UJKv\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de4448f22406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:47:00 309</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 310</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 310</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 310</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910819801_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 310</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 310</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910819801_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 310</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910819801_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 857</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"86d48ca2041f4887bdf98835b51e3eec\",\"user\":{\"_id\":\"64f7072476c9763cf914570e\",\"account\":\"zhangjun_1693910819801_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:47:00.257+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:47:00.837+00:00\",\"nick_name\":\"User0124829996\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 857</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 858</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 858</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 858</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 858</span>  拿到真实数据为：86d48ca2041f4887bdf98835b51e3eec<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 858</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=86d48ca2041f4887bdf98835b51e3eec, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 858</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=86d48ca2041f4887bdf98835b51e3eec, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:00 858</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699011388816502785', '1693904735972724737', 0, '2023-09-05 18:47:35', '2023-09-05 18:47:35', 500, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f7074776c9763cf914570f\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910855354_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:47:35.842+00:00\", \"last_name\": \"\", \"nick_name\": \"User7771589387\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:47:36 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=pEhIUyr62VpCIFh%2BfXU29w3t9tHOBwEeZhEmOVUbCtW9aIUH2zrgODUFuPasEXAQ4BOxNaaVowxwmjr9MgeNX9%2FjzqGdTqnhDFMMX7gvRR2UfWBuHSRtGMIEsgNrbnv1NS%2F78QFp69oF\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de51fbd6a406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:47:35 354</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 354</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 354</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 354</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 354</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 354</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910855354_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 354</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910855354_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f7074776c9763cf914570f\",\"account\":\"zhangjun_1693910855354_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:47:35.842+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User7771589387\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  拿到真实数据为：64f7074776c9763cf914570f<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f7074776c9763cf914570f, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f7074776c9763cf914570f, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910855354_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  替换后真实的值为：zhangjun_1693910855354_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910855354_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910855354_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910855354_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 854</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699011391278559233', '1693904735972724737', 1, '2023-09-05 18:47:35', '2023-09-05 18:47:36', 543, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f7074776c9763cf914570f\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910855354_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:47:36.422+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:47:35.842+00:00\", \"last_name\": \"\", \"nick_name\": \"User7771589387\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"9e9b591059f14551aea18c125f385d02\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:47:36 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=4TrW5uj1NfVdjy2aHJxtPOKCdUhAmgXKkE%2FzQbI8v7y2EvTPHPIQyHRnzwUj%2FyxWTwnqrYeawQE1KTYmXB604FcTH9yOBb1N8dgiUOWnwwHdUegh0alYNSg2MJOE44%2F2MY%2BIHmSnMBkc\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de522e983406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:47:35 891</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 891</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 891</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 891</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910855354_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 891</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 891</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910855354_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:47:35 891</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910855354_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"9e9b591059f14551aea18c125f385d02\",\"user\":{\"_id\":\"64f7074776c9763cf914570f\",\"account\":\"zhangjun_1693910855354_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:47:35.842+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:47:36.422+00:00\",\"nick_name\":\"User7771589387\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  拿到真实数据为：9e9b591059f14551aea18c125f385d02<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=9e9b591059f14551aea18c125f385d02, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=9e9b591059f14551aea18c125f385d02, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:47:36 435</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699011824864735234', '1693904735972724737', 0, '2023-09-05 18:49:18', '2023-09-05 18:49:19', 1613, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f707af76c9763cf9145710\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910958202_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:49:19.807+00:00\", \"last_name\": \"\", \"nick_name\": \"User5357382264\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:49:19 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=cOc8Obj7g7jK59alRFjfGrm7cpaLMDq0BBEkGe4eWYB3Dmzn%2FIHNLjEhMYD9ENGGnplIs6HqGqYLxphV95%2BF6k1e1Yg1ed4WGXoq3DKt0MEw7uiBMGLqDiCk5adzfXmh3tGdRn%2BoZDxy\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de7a26dfc406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:49:18 202</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:49:18 202</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:49:18 202</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:49:18 202</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:49:18 202</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:49:18 202</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910958202_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:18 202</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910958202_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f707af76c9763cf9145710\",\"account\":\"zhangjun_1693910958202_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:49:19.807+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User5357382264\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  拿到真实数据为：64f707af76c9763cf9145710<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f707af76c9763cf9145710, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f707af76c9763cf9145710, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910958202_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  替换后真实的值为：zhangjun_1693910958202_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910958202_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910958202_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910958202_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 816</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699011827381317633', '1693904735972724737', 1, '2023-09-05 18:49:19', '2023-09-05 18:49:20', 559, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f707af76c9763cf9145710\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910958202_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:49:20.399+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:49:19.807+00:00\", \"last_name\": \"\", \"nick_name\": \"User5357382264\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"0091b105c29d476093296134e8e8cb55\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:49:20 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=1iO5uawz2pEgK6aHPq0HqmFh7Taz1g3JABtlmbhKcpcxz2nbgoJKJlPpIeVKUzo6uI1ekype3nOz85%2B76AH2LZgp%2BV7iFZhuiH5cNLKWR7WaNchIo5HUfdrLRxvE6a94PlonZCmzHkCj\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de7acaa1e406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:49:19 853</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 854</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 854</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 854</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910958202_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 854</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 854</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910958202_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:19 854</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910958202_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 414</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"0091b105c29d476093296134e8e8cb55\",\"user\":{\"_id\":\"64f707af76c9763cf9145710\",\"account\":\"zhangjun_1693910958202_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:49:19.807+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:49:20.399+00:00\",\"nick_name\":\"User5357382264\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 414</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 414</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 414</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 414</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 414</span>  拿到真实数据为：0091b105c29d476093296134e8e8cb55<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 414</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=0091b105c29d476093296134e8e8cb55, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 414</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=0091b105c29d476093296134e8e8cb55, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:20 415</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699011931769155586', '1693904735972724737', 0, '2023-09-05 18:49:44', '2023-09-05 18:49:45', 477, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f707c976c9763cf9145711\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910984831_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:49:45.298+00:00\", \"last_name\": \"\", \"nick_name\": \"User3257655146\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:49:45 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=F%2FFeJ%2Fmn08nmbteNdjVwVTaPSqoeDsJuja9z5xkawdyMfz81I4o7Dz96D8GvUzG%2BPd5mEhMB%2FW0DGMWt2%2B%2Bsvgxfx%2Bg%2BInECaSnPQCyWt2EhRid%2BSbdM2IjGxjnHcx85RBMSp%2FkTThup\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de848c95f406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:49:44 831</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:49:44 831</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:49:44 831</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:49:44 831</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:49:44 831</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:49:44 831</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910984831_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:44 831</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910984831_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f707c976c9763cf9145711\",\"account\":\"zhangjun_1693910984831_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:49:45.298+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User3257655146\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  拿到真实数据为：64f707c976c9763cf9145711<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f707c976c9763cf9145711, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f707c976c9763cf9145711, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910984831_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  替换后真实的值为：zhangjun_1693910984831_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910984831_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693910984831_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693910984831_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 309</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699011934260572162', '1693904735972724737', 1, '2023-09-05 18:49:45', '2023-09-05 18:49:45', 553, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f707c976c9763cf9145711\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693910984831_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:49:45.885+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:49:45.298+00:00\", \"last_name\": \"\", \"nick_name\": \"User3257655146\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"feedf72cce6542c7a4b5b609a6528b4c\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:49:46 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=QX1oDjtnwG0ElwQ%2FejHzuE5VTyHr7tpnQQdnxuHnr24JcbJ4JpMwHy71JQaWLpuIti%2BcQY%2FSD5%2FpE8gaNfToXXCPIloPqTHODhtpnW2IrwfMOeNVIw3KhyVrLqs3F3B3tBJUYp3EQOJM\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801de84bfd60406a-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:49:45 344</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 345</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 345</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 345</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910984831_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 345</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 345</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910984831_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 345</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693910984831_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"feedf72cce6542c7a4b5b609a6528b4c\",\"user\":{\"_id\":\"64f707c976c9763cf9145711\",\"account\":\"zhangjun_1693910984831_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:49:45.298+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:49:45.885+00:00\",\"nick_name\":\"User3257655146\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  拿到真实数据为：feedf72cce6542c7a4b5b609a6528b4c<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=feedf72cce6542c7a4b5b609a6528b4c, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=feedf72cce6542c7a4b5b609a6528b4c, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:49:45 899</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1699013353726291969', '1693904735972724737', 0, '2023-09-05 18:55:22', '2023-09-05 18:55:24', 1833, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f7091c76c9763cf9145712\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693911322473_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:55:24.286+00:00\", \"last_name\": \"\", \"nick_name\": \"User5490348493\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:55:24 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=xVbSgi9NHpMgeA9RnPtSO8bVn%2FV5KQWUDt%2Fy%2BGYq%2F%2BUBDoHUCzcUGlRUTqtiIuemb30nm%2FPD04IaPZshPQFW5PRd2sNjBPo1itVoflh%2Bw5lL65wrcQSfqBVLkKgTIqRHDiQbw9QN4OQ3\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801df0889bb33e20-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:55:22 469</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-05 18:55:22 470</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-05 18:55:22 470</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:55:22 472</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-05 18:55:22 472</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:55:22 473</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693911322473_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:55:22 473</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693911322473_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 308</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"64f7091c76c9763cf9145712\",\"account\":\"zhangjun_1693911322473_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:55:24.286+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User5490348493\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 310</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  拿到真实数据为：64f7091c76c9763cf9145712<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f7091c76c9763cf9145712, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=64f7091c76c9763cf9145712, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 311</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693911322473_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  替换后真实的值为：zhangjun_1693911322473_1@qq.com<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693911322473_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1693911322473_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1693911322473_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 312</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1699013356473561089', '1693904735972724737', 1, '2023-09-05 18:55:24', '2023-09-05 18:55:24', 595, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"64f7091c76c9763cf9145712\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1693911322473_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-05T10:55:24.911+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-05T10:55:24.286+00:00\", \"last_name\": \"\", \"nick_name\": \"User5490348493\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"948662a250cd4d579b703edc18e23675\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 05 Sep 2023 10:55:25 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Report-To\", \"second\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=t5F7%2BuCZ1nwbtgyZXqgR5g1gCUOgQ4cW7fizcQLWnGealpApick8vCXK6BIHfsTIpsUwG9H69PJqQIB5wcSi%2FARgS2APrSFMfnNHOs8r0OISi5jMhWrrbs6IKrk1n8cgbGOtklzaxbH2\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"NEL\", \"second\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"801df092e95e3e20-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-05 18:55:24 371</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 371</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 371</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 371</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693911322473_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 371</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 371</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693911322473_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 372</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1693911322473_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 967</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"948662a250cd4d579b703edc18e23675\",\"user\":{\"_id\":\"64f7091c76c9763cf9145712\",\"account\":\"zhangjun_1693911322473_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-05T10:55:24.286+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-05T10:55:24.911+00:00\",\"nick_name\":\"User5490348493\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 968</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 968</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 968</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 968</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 968</span>  拿到真实数据为：948662a250cd4d579b703edc18e23675<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 968</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=948662a250cd4d579b703edc18e23675, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 968</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=948662a250cd4d579b703edc18e23675, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-05 18:55:24 968</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1706629407923351554', '1693904735972724737', 0, '2023-09-26 19:18:46', '2023-09-26 19:18:53', 6902, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"msg\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"<>\\\",\\r\\n \\\"expectValue\\\": \\\"user_exists\\\"\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512be1c76c9763cf9145777\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695727126191_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T11:18:52.945+00:00\", \"last_name\": \"\", \"nick_name\": \"User2951199751\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 11:18:53 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb1bccdf553fce-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 19:18:46 182</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-26 19:18:46 182</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-26 19:18:46 182</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 19:18:46 190</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-26 19:18:46 190</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 19:18:46 191</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695727126191_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 19:18:46 191</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695727126191_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"msg\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"<>\",\r\n \"expectValue\": \"user_exists\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 95</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"6512be1c76c9763cf9145777\",\"account\":\"zhangjun_1695727126191_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T11:18:52.945+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User2951199751\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 97</span>  判断的响应内容是：create account，预期值是：user_exists 断言结果是：false<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  拿到真实数据为：6512be1c76c9763cf9145777<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512be1c76c9763cf9145777, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512be1c76c9763cf9145777, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 98</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695727126191_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  替换后真实的值为：zhangjun_1695727126191_1@qq.com<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695727126191_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695727126191_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695727126191_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 99</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1706629410855170050', '1693904735972724737', 1, '2023-09-26 19:18:53', '2023-09-26 19:18:53', 648, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512be1c76c9763cf9145777\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695727126191_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-26T11:18:53.714+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T11:18:52.945+00:00\", \"last_name\": \"\", \"nick_name\": \"User2951199751\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"4032da88dbed4243b4f9622e4e341f72\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 11:18:53 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb1bd75f483fce-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 19:18:53 195</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 196</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 196</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 196</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695727126191_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 196</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 196</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695727126191_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 196</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695727126191_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 844</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"4032da88dbed4243b4f9622e4e341f72\",\"user\":{\"_id\":\"6512be1c76c9763cf9145777\",\"account\":\"zhangjun_1695727126191_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T11:18:52.945+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-26T11:18:53.714+00:00\",\"nick_name\":\"User2951199751\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 845</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 845</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 845</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 845</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 845</span>  拿到真实数据为：4032da88dbed4243b4f9622e4e341f72<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 845</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=4032da88dbed4243b4f9622e4e341f72, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 845</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=4032da88dbed4243b4f9622e4e341f72, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:18:53 845</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1706630385779191810', '1693904735972724737', 1, '2023-09-26 19:22:44', '2023-09-26 19:22:46', 1576, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512bf0676c9763cf9145778\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695727364701_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T11:22:46.107+00:00\", \"last_name\": \"\", \"nick_name\": \"User8960641266\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 11:22:46 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb217e5cb23fce-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 19:22:44 701</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-26 19:22:44 701</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-26 19:22:44 701</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 19:22:44 701</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-26 19:22:44 701</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 19:22:44 701</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695727364701_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 19:22:44 701</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695727364701_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 277</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"6512bf0676c9763cf9145778\",\"account\":\"zhangjun_1695727364701_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T11:22:46.107+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User8960641266\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 277</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 277</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 277</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 277</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  拿到真实数据为：6512bf0676c9763cf9145778<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512bf0676c9763cf9145778, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512bf0676c9763cf9145778, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695727364701_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  替换后真实的值为：zhangjun_1695727364701_1@qq.com<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695727364701_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695727364701_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695727364701_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 278</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1706630388450963457', '1693904735972724737', 1, '2023-09-26 19:22:46', '2023-09-26 19:22:46', 587, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512bf0676c9763cf9145778\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695727364701_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-26T11:22:46.789+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T11:22:46.107+00:00\", \"last_name\": \"\", \"nick_name\": \"User8960641266\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"fb1b2aff3d974a388f7a92e7a22f6f91\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 11:22:46 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb218869613fce-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 19:22:46 324</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 324</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 324</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 324</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695727364701_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 324</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 325</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695727364701_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 325</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695727364701_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 912</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"fb1b2aff3d974a388f7a92e7a22f6f91\",\"user\":{\"_id\":\"6512bf0676c9763cf9145778\",\"account\":\"zhangjun_1695727364701_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T11:22:46.107+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-26T11:22:46.789+00:00\",\"nick_name\":\"User8960641266\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 912</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 912</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 912</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 912</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 912</span>  拿到真实数据为：fb1b2aff3d974a388f7a92e7a22f6f91<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 912</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=fb1b2aff3d974a388f7a92e7a22f6f91, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 913</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=fb1b2aff3d974a388f7a92e7a22f6f91, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 19:22:46 913</span>  用例名称：login_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090823151595522', 'register_user_success', '1706640457993322497', '1693904735972724737', 1, '2023-09-26 20:02:40', '2023-09-26 20:02:47', 6721, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512c86776c9763cf9145779\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695729760934_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T12:02:47.545+00:00\", \"last_name\": \"\", \"nick_name\": \"User6542998617\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 12:02:47 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb5c1f589446f7-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"6512c86776c9763cf9145779\",\"account\":\"zhangjun_1695729760934_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T12:02:47.545+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User6542998617\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  拿到真实数据为：6512c86776c9763cf9145779<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512c86776c9763cf9145779, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512c86776c9763cf9145779, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后真实的值为：zhangjun_1695729760934_1@qq.com<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695729760934_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695729760934_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_info` VALUES ('1696090825663983617', 'login_user_success', '1706640461076135937', '1693904735972724737', 1, '2023-09-26 20:02:47', '2023-09-26 20:02:48', 664, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512c86776c9763cf9145779\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695729760934_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-26T12:02:48.288+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T12:02:47.545+00:00\", \"last_name\": \"\", \"nick_name\": \"User6542998617\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"ec86df9c42c945ab9221f5cb61b26962\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 12:02:48 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb5c295eae46f7-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 406</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"ec86df9c42c945ab9221f5cb61b26962\",\"user\":{\"_id\":\"6512c86776c9763cf9145779\",\"account\":\"zhangjun_1695729760934_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T12:02:47.545+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-26T12:02:48.288+00:00\",\"nick_name\":\"User6542998617\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 406</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  拿到真实数据为：ec86df9c42c945ab9221f5cb61b26962<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=ec86df9c42c945ab9221f5cb61b26962, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=ec86df9c42c945ab9221f5cb61b26962, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  用例名称：login_user_success执行结束....<br><br>');

-- ----------------------------
-- Table structure for test_result_temp_info
-- ----------------------------
DROP TABLE IF EXISTS `test_result_temp_info`;
CREATE TABLE `test_result_temp_info`  (
  `result_id` char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '结果id',
  `case_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用例名称',
  `result_info_id` char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '结果详情id',
  `config_id` char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '执行配置id',
  `run_result` tinyint(1) NULL DEFAULT NULL COMMENT '是否成功,0表示错误、1表示成功',
  `run_begin_time` datetime(0) NULL DEFAULT NULL COMMENT '开始执行时间',
  `run_end_time` datetime(0) NULL DEFAULT NULL COMMENT '执行结束时间',
  `run_time` int(11) NULL DEFAULT NULL COMMENT '执行时长',
  `datas` json NULL COMMENT '数据',
  `result_data` json NULL COMMENT '结果数据',
  `result_log` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '结果日志'
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of test_result_temp_info
-- ----------------------------
INSERT INTO `test_result_temp_info` VALUES ('1696090823151595522', 'register_user_success', '1706640457993322497', '1693904735972724737', 1, '2023-09-26 20:02:40', '2023-09-26 20:02:47', 6721, '{\"isRun\": \"Y\", \"apiPath\": \"/user/register\", \"caseName\": \"register_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"code\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"==\\\",\\r\\n \\\"expectValue\\\": 200\\r\\n}\", \"caseTitle\": \"注册用户\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"_id\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"_id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"account\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"account\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n},{\\n    \\\"paramName\\\": \\\"password\\\",\\n    \\\"paramFrom\\\": \\\"requestBody\\\",\\n    \\\"paramsEq\\\": \\\"password\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\"\\\"\\n}]\", \"caseNumber\": 1, \"afterScript\": null, \"requestBody\": \"{\\r\\n    \\\"grecaptcha_token\\\":\\\"FAKE_TOKEN\\\",\\r\\n    \\\"account\\\":\\\"zhangjun_·time·_1@qq.com\\\",\\r\\n    \\\"password\\\":\\\"zj123456\\\"\\r\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"create account\", \"code\": 200, \"data\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512c86776c9763cf9145779\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695729760934_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": null, \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T12:02:47.545+00:00\", \"last_name\": \"\", \"nick_name\": \"User6542998617\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": null}, \"message\": \"create account\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 12:02:47 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb5c1f589446f7-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  开始执行测试任务...<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  base url:https://m2-api.pre-release.xyz<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,参数处理器数量：1<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success, replace data：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:40 934</span>  用例名称：register_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=1, caseName=register_user_success, caseTitle=注册用户, apiPath=/user/register, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"code\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"==\",\r\n \"expectValue\": 200\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"_id\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"_id\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"account\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"account\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n},{\n    \"paramName\": \"password\",\n    \"paramFrom\": \"requestBody\",\n    \"paramsEq\": \"password\\\\\\\":\\\\\\\"(.*?)\\\\\\\"\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  用例名称：register_user_success,响应体的数据：{\"code\":200,\"data\":{\"_id\":\"6512c86776c9763cf9145779\",\"account\":\"zhangjun_1695729760934_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":null,\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T12:02:47.545+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":null,\"nick_name\":\"User6542998617\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}},\"msg\":\"createaccount\",\"message\":\"createaccount\"}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  判断的响应内容是：200，预期值是：200 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  正则表达式为：_id\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  拿到真实数据为：6512c86776c9763cf9145779<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512c86776c9763cf9145779, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=_id, paramFrom=responseBody, paramEq=_id\\\":\\\"(.*?)\\\",, paramValue=6512c86776c9763cf9145779, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 656</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  正则表达式为：account\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后真实的值为：zhangjun_1695729760934_1@qq.com<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695729760934_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=account, paramFrom=requestBody, paramEq=account\\\":\\\"(.*?)\\\",, paramValue=zhangjun_1695729760934_1@qq.com, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  从请求体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  正则表达式为：password\\\":\\\"(.*?)\\\"<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  请求参数为：{\r\n    \"grecaptcha_token\":\"FAKE_TOKEN\",\r\n    \"account\":\"zhangjun_1695729760934_1@qq.com\",\r\n    \"password\":\"zj123456\"\r\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后真实的值为：zj123456<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=register_user_success, paramName=password, paramFrom=requestBody, paramEq=password\\\":\\\"(.*?)\\\", paramValue=zj123456, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 657</span>  用例名称：register_user_success执行结束....<br><br>');
INSERT INTO `test_result_temp_info` VALUES ('1696090825663983617', 'login_user_success', '1706640461076135937', '1693904735972724737', 1, '2023-09-26 20:02:47', '2023-09-26 20:02:48', 664, '{\"isRun\": \"Y\", \"apiPath\": \"/user/login?grecaptcha_token=FAKE_TOKEN\", \"caseName\": \"login_user_success\", \"isParams\": \"是\", \"assertMap\": \"{\\r\\n \\\"key\\\": \\\"data.avatar\\\",\\r\\n \\\"from\\\": \\\"responseBody\\\",\\r\\n \\\"type\\\": \\\"null\\\",\\r\\n \\\"expectValue\\\": \\\"null\\\"\\r\\n}\", \"caseTitle\": \"用户登录\", \"paramList\": \"[{\\n    \\\"paramName\\\": \\\"token\\\",\\n    \\\"paramFrom\\\": \\\"responseBody\\\",\\n    \\\"paramsEq\\\": \\\"token\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"(.*?)\\\\\\\\\\\\\\\",\\\"\\n}]\", \"caseNumber\": 2, \"afterScript\": null, \"requestBody\": \"{\\n    \\\"grecaptcha_token\\\": \\\"FAKE_TOKEN\\\",\\n    \\\"account\\\": \\\"#account#\\\",\\n    \\\"password\\\": \\\"#password#\\\"\\n}\", \"beforeScript\": null, \"requestMethod\": \"POST\", \"requestHeaders\": \"{\\\"content-type\\\":\\\"application/json\\\"}\", \"isMainProcessApi\": \"是\"}', '{\"code\": 200, \"responseBody\": {\"msg\": \"OK\", \"code\": 200, \"data\": {\"user\": {\"ip\": \"\", \"ua\": \"Go-http-client/1.1\", \"_id\": \"6512c86776c9763cf9145779\", \"vip\": 0, \"from\": null, \"phone\": \"\", \"avatar\": null, \"gender\": \"unknow\", \"tax_id\": null, \"account\": \"zhangjun_1695729760934_1@qq.com\", \"bank_br\": null, \"blocked\": false, \"from_id\": null, \"from_ext\": null, \"login_at\": \"2023-09-26T12:02:48.288+00:00\", \"platform\": \"\", \"vip_info\": {\"bet\": 0, \"recharge\": 0, \"bet_refund\": 0, \"bet_refund_map\": {}, \"withdraw_count\": 0, \"withdraw_free_amount\": \"0\"}, \"bet_limit\": null, \"create_at\": \"2023-09-26T12:02:47.545+00:00\", \"last_name\": \"\", \"nick_name\": \"User6542998617\", \"open_meta\": null, \"task_data\": [], \"update_at\": null, \"user_type\": \"normal\", \"vip_award\": {}, \"activities\": {}, \"bet_amount\": {}, \"first_name\": \"\", \"balance_map\": {\"MXN\": {\"amount\": 0, \"currency\": \"MXN\", \"bet_target\": 0, \"bet_progress\": 0, \"withdrawable_amount\": 0}}, \"is_verified\": false, \"open_google\": null, \"spread_info\": {\"spread_parent\": null, \"spread_children\": [], \"spread_bet_amount\": {}, \"spread_award_amount\": {}, \"spread_grand_parent\": null, \"spread_bet_award_rate\": null, \"spread_children_count\": 0, \"spread_grandgrand_parent\": null, \"child_first_recharge_count\": 0, \"spread_recharge_award_rate\": null, \"spread_grand_children_count\": 0, \"spread_grandgrand_children_count\": 0}, \"country_code\": \"\", \"game_history\": {}, \"profit_amount\": {}, \"recharge_limit\": null, \"reward_counter\": [], \"recharge_amount\": {}, \"withdraw_amount\": {}, \"is_email_verified\": false, \"bind_currency_info\": {\"bind_currency\": \"MXN\", \"is_bind_currency\": false}}, \"token\": \"ec86df9c42c945ab9221f5cb61b26962\"}, \"message\": \"OK\"}, \"responseHeader\": [{\"first\": \"Date\", \"second\": \"Tue, 26 Sep 2023 12:02:48 GMT\"}, {\"first\": \"Content-Type\", \"second\": \"application/json; charset=utf-8\"}, {\"first\": \"Transfer-Encoding\", \"second\": \"chunked\"}, {\"first\": \"Connection\", \"second\": \"keep-alive\"}, {\"first\": \"Vary\", \"second\": \"Accept-Encoding\"}, {\"first\": \"Access-Control-Allow-Origin\", \"second\": \"*\"}, {\"first\": \"Access-Control-Allow-Credentials\", \"second\": \"true\"}, {\"first\": \"Access-Control-Allow-Methods\", \"second\": \"PUT, GET, POST, OPTIONS\"}, {\"first\": \"Access-Control-Allow-Headers\", \"second\": \"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Forwarded-For,username,userid\"}, {\"first\": \"Access-Control-Max-Age\", \"second\": \"1728000\"}, {\"first\": \"CF-Cache-Status\", \"second\": \"DYNAMIC\"}, {\"first\": \"Strict-Transport-Security\", \"second\": \"max-age=86400; includeSubDomains; preload\"}, {\"first\": \"X-Content-Type-Options\", \"second\": \"nosniff\"}, {\"first\": \"Server\", \"second\": \"cloudflare\"}, {\"first\": \"CF-RAY\", \"second\": \"80cb5c295eae46f7-SIN\"}, {\"first\": \"alt-svc\", \"second\": \"h3=\\\":443\\\"; ma=86400\"}]}', '<span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success用例开始执行...<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success,参数处理器数量：2<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 741</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success,com.zhangjun.quyi.api_auto_test.api_core.components.param.get.impl.RequestBodyParamsGetting参数处理器执行：<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success, replace data：{\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}<br><br><span style = \'color:blue\'>2023-09-26 20:02:47 742</span>  用例名称：login_user_success,替换后的数据：ApiTestCaseEntity(caseNumber=2, caseName=login_user_success, caseTitle=用户登录, apiPath=/user/login?grecaptcha_token=FAKE_TOKEN, requestMethod=POST, isMainProcessApi=是, requestHeaders={\"content-type\":\"application/json\"}, requestBody={\n    \"grecaptcha_token\": \"FAKE_TOKEN\",\n    \"account\": \"zhangjun_1695729760934_1@qq.com\",\n    \"password\": \"zj123456\"\n}, beforeScript=null, afterScript=null, isRun=Y, assertMap={\r\n \"key\": \"data.avatar\",\r\n \"from\": \"responseBody\",\r\n \"type\": \"null\",\r\n \"expectValue\": \"null\"\r\n}, isParams=是, paramList=[{\n    \"paramName\": \"token\",\n    \"paramFrom\": \"responseBody\",\n    \"paramsEq\": \"token\\\\\\\":\\\\\\\"(.*?)\\\\\\\",\"\n}])<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 406</span>  用例名称：login_user_success,响应体的数据：{\"code\":200,\"data\":{\"token\":\"ec86df9c42c945ab9221f5cb61b26962\",\"user\":{\"_id\":\"6512c86776c9763cf9145779\",\"account\":\"zhangjun_1695729760934_1@qq.com\",\"activities\":{},\"avatar\":null,\"balance_map\":{\"MXN\":{\"amount\":0,\"bet_progress\":0,\"bet_target\":0,\"currency\":\"MXN\",\"withdrawable_amount\":0}},\"bank_br\":null,\"bet_amount\":{},\"bet_limit\":null,\"bind_currency_info\":{\"bind_currency\":\"MXN\",\"is_bind_currency\":false},\"blocked\":false,\"country_code\":\"\",\"create_at\":\"2023-09-26T12:02:47.545+00:00\",\"first_name\":\"\",\"from\":null,\"from_ext\":null,\"from_id\":null,\"game_history\":{},\"gender\":\"unknow\",\"ip\":\"\",\"is_email_verified\":false,\"is_verified\":false,\"last_name\":\"\",\"login_at\":\"2023-09-26T12:02:48.288+00:00\",\"nick_name\":\"User6542998617\",\"open_google\":null,\"open_meta\":null,\"phone\":\"\",\"platform\":\"\",\"profit_amount\":{},\"recharge_amount\":{},\"recharge_limit\":null,\"reward_counter\":[],\"spread_info\":{\"child_first_recharge_count\":0,\"spread_award_amount\":{},\"spread_bet_amount\":{},\"spread_bet_award_rate\":null,\"spread_children\":[],\"spread_children_count\":0,\"spread_grand_children_count\":0,\"spread_grand_parent\":null,\"spread_grandgrand_children_count\":0,\"spread_grandgrand_parent\":null,\"spread_parent\":null,\"spread_recharge_award_rate\":null},\"task_data\":[],\"tax_id\":null,\"ua\":\"Go-http-client/1.1\",\"update_at\":null,\"user_type\":\"normal\",\"vip\":0,\"vip_award\":{},\"vip_info\":{\"bet\":0,\"bet_refund\":0,\"bet_refund_map\":{},\"recharge\":0,\"withdraw_count\":0,\"withdraw_free_amount\":\"0\"},\"withdraw_amount\":{}}},\"msg\":\"OK\",\"message\":\"OK\"}<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 406</span>  判断的响应内容是：null，预期值是：null 断言结果是：true<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  替换前的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=null, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  从响应体中拿到数据.....<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  正则表达式为：token\\\":\\\"(.*?)\\\",<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  拿到真实数据为：ec86df9c42c945ab9221f5cb61b26962<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  替换后的参数对象为:ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=ec86df9c42c945ab9221f5cb61b26962, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  用例名称：login_user_success,设置的参数：ApiParamsEntity(paramId=null, caseName=login_user_success, paramName=token, paramFrom=responseBody, paramEq=token\\\":\\\"(.*?)\\\",, paramValue=ec86df9c42c945ab9221f5cb61b26962, createTime=null, updateTime=null)<br><br><span style = \'color:blue\'>2023-09-26 20:02:48 407</span>  用例名称：login_user_success执行结束....<br><br>');

SET FOREIGN_KEY_CHECKS = 1;
